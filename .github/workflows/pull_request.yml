name: Pull Request

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:


permissions: write-all


jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff

      - name: Setup ReviewDog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Setup Black
        uses:  psf/black@stable
        id: action_black
        with:
          options: ""
          src: "pursuits"

      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.REVIEWDOG_PR_REVIEW }}
          locale: "US"
          reporter: "github-pr-review"

      - name: Formating Suggestions [Black]
        run: |
          set -euxo pipefail
          TMPFILE=$(mktemp)
          git diff > "$TMPFILE"
          cat "$TMPFILE"
          reviewdog -f=diff\
                    -name=BLACK\
                    -reporter=github-pr-review\
                    -level=warning\
                    -filter-mode=diff_context\
                    - tee \
                    < "$TMPFILE"
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_PR_REVIEW }}

     
           
      - name: Bandit Scan
        uses: shundor/python-bandit-scan@9cc5aa4a006482b8a7f91134412df6772dbda22c
        with: # optional arguments
          # exit with 0, even with results found
          exit_zero: true # optional, default is DEFAULT
          # Github token of the repository (automatically created by Github)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information.
          # File or directory to run bandit on
          # path: # optional, default is .
          # Report only issues of a given severity level or higher. Can be LOW, MEDIUM or HIGH. Default is UNDEFINED (everything)
          # level: # optional, default is UNDEFINED
          # Report only issues of a given confidence level or higher. Can be LOW, MEDIUM or HIGH. Default is UNDEFINED (everything)
          # confidence: # optional, default is UNDEFINED
          # comma-separated list of paths (glob patterns supported) to exclude from scan (note that these are in addition to the excluded paths provided in the config file) (default: .svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs,*.egg)
          # excluded_paths: # optional, default is DEFAULT
          # comma-separated list of test IDs to skip
          # skips: # optional, default is DEFAULT
          # path to a .bandit file that supplies command line arguments
          # ini_path: # optional, default is DEFAULT


