name: Pull Request

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, edited ]
  workflow_dispatch:


permissions: write-all


jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff

      - name: Setup ReviewDog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Setup Black
        uses:  psf/black@stable
        id: action_black
        with:
          options: ""
          src: "pursuits"

      - name: Check for Python File Format Changes
        id: formating_changes
        run: |
          if git diff --name-only | grep -qE '.*\.py$'; then
            echo "::set-output name=python_changes::true"
          else
            echo "::set-output name=python_changes::false"
          fi

      - name: Create Pull Request
        if: steps.formating_changes.outputs.python_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Format Python code with psf/black push"
          commit-message: ":art: Format Python code with psf/black"
          body: |
            There appear to be some python formatting errors in ${{ github.sha }}. This pull request
            uses the [psf/black](https://github.com/psf/black) formatter to fix these issues.
          base: ${{ github.head_ref }} # Creates pull request onto pull request or commit branch
          branch: actions/black

      - name: Formating Suggestions [Black]
        run: |
          set -euxo pipefail
          TMPFILE=$(mktemp)
          git diff > "$TMPFILE"
          reviewdog -f=diff\
                    -name=BLACK\
                    -reporter=github-pr-review\
                    -level=warning < "$TMPFILE"
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.REVIEWDOG_PR_REVIEW }}

  
      # - name: Bandit Scan
      #   uses: shundor/python-bandit-scan@9cc5aa4a006482b8a7f91134412df6772dbda22c
      #   with: 
      #     exit_zero: true 
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


